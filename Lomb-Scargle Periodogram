# Data Loading and Preparation
import numpy as np
import pandas as pd
import scipy

data = pd.read_csv('triple_star_lightcurve.csv', skiprows=1, names=['time_days', 'magnitude'])
time = data['time_days'].values
magnitude = data['magnitude'].values
mag_centered = magnitude - np.mean(magnitude)  # Center the data

# Frequency Range Definition
# The code sets up a frequency array covering periods from 0.2 to 500 days
# using 10,000 logarithmically-spaced frequency points for comprehensive coverage
min_period = 0.2    # Minimum period in days
max_period = 500    # Maximum period in days

# Convert periods to frequencies (frequency = 1/period)
min_freq = 1.0 / max_period  # Minimum frequency (cycles per day)
max_freq = 1.0 / min_period  # Maximum frequency (cycles per day)

n_frequencies = 10000  # Number of frequency points to sample
frequencies = np.logspace(np.log10(min_freq), np.log10(max_freq), n_frequencies)

# Lomb-Scargle Computation
angular_frequencies = 2 * np.pi * frequencies
ls_power = scipy.signal.lombscargle(time, mag_centered, angular_frequencies)
periods = 1.0 / frequencies

# Peak Detection
peaks, properties = scipy.signal.find_peaks(ls_power, height=0.05, distance=50)

print("LOMB-SCARGLE PERIODOGRAM RESULTS")
print(f"Number of significant peaks found: {len(peaks)}")
print(f"\nTop detected periods:")

# Extract and sort peaks by power
peak_periods = periods[peaks]
peak_powers = ls_power[peaks]
sorted_indices = np.argsort(peak_powers)[::-1]

# Print top 10 periods
print(f"{'Rank':<6} {'Period (days)':<15} {'Power':<10}")
print("-"*40)
for i, idx in enumerate(sorted_indices[:10]):
    print(f"{i+1:<6} {peak_periods[idx]:>12.4f}     {peak_powers[idx]:>8.4f}")

print(f"\nMaximum power: {ls_power.max():.4f}")
print(f"Period at max power: {periods[np.argmax(ls_power)]:.4f} days")
